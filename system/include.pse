<?
    /*
    This product includes PHP software, freely available from <http://www.php.net/software/>
    */

if (!defined('IS_APPLICATION_START')){
	
	if( isset($_PARAMS[2]) ){
		if (fileExt($_PARAMS[2])=='dvsexe') {
			$GLOBALS['APPLICATION']->DefaultFont->name = 'Segoe UI';
			define_ex('EMULATE_DVS_EXE', true);    
		} else {
			define_ex('EMULATE_DVS_EXE', false); //V-touch.skf
		}
    } else {
		define_ex('EMULATE_DVS_EXE', false);
	}
	define('DS_DEBUG_MODE', in_array('-debug', $_PARAMS, 0));

	//lbpl('syned240.bpl');
  
	define('APP_DESIGN_MODE',!EMULATE_DVS_EXE);
    $GLOBALS['APP_DESIGN_MODE'] = !EMULATE_DVS_EXE;
    
    global $APPLICATION;
    
    if (EMULATE_DVS_EXE){
        set_include_path(DOC_ROOT2);
        ini_set('include_path', DOC_ROOT2);
        define('SYSTEM_DIR',DOC_ROOT2);
        
        global $__config;
        $__config['config']['debug']['enabled'] = true;
        
    } else {
        
        set_include_path(DOC_ROOT);
        ini_set('include_path', DOC_ROOT);
        define('SYSTEM_DIR',DOC_ROOT);
    }
	
    require 'start.php';


    if (!EMULATE_DVS_EXE){
		$APPLICATION->title = 'Dev-S '.DV_YEAR;
		$dfm_dir = "\\design\\forms\\";
        $fmLogoin = TForm::loadFromFile("{$dfm_dir}uLogoin");
		dsThemeDesign::Load();
        c("fmLogoin->label9")->caption = "Version: " . DV_VERSION . " - " . DV_PREFIX;
		c("fmLogoin->Image1")->loadFromFile(dsThemeDesign::$dir."/LogoIn.png");
		c('fmLogoin->loadbar')->brushColor = dsThemeDesign::$ini['fmLogoin']['loadbar'];
		fmLogoin::Progress(1);
		fmLogoin::Progress2(15,28);
        $fmLogoin->show();
		
		$GLOBALS['APPLICATION']->processMessages();
        $fmMain = TForm::loadFromFile("{$dfm_dir}uMain",true);
		fmLogoin::Progress2(15,28);
        $GLOBALS['fmMain'] =& $fmMain;
        setMainForm($fmMain);
        $APPLICATION->mainFormOnTaskBar = true;
		$fmMain->hide();

    $GLOBALS['APPLICATION']->processMessages();
    
    $fmEdit = TForm::loadFromFile("{$dfm_dir}uEdit");
	fmLogoin::Progress2(15,28);
    c_Alias('fmMain->listObjs','fmObjectInspector->list');
    c_Alias('fmMain','fmComponents');
    c_Alias('fmMain','fmObjectInspector');
    c_Alias('fmMain','fmPropsAndEvents');
		fmLogoin::Progress2(15,28);
        // Editor dialogs
        TForm::loadFromFile("{$dfm_dir}uedt_Text", true);
		fmLogoin::Progress2(15,28);
		TForm::loadFromFile("{$dfm_dir}uProjectHistory", true);
		fmLogoin::Progress2(15,28);
		TForm::loadFromFile("{$dfm_dir}uTIBEditor", true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uedt_EventTypes");
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uInputText");
		fmLogoin::Progress2(15,28);
    
        TForm::loadFromFile("{$dfm_dir}uFindDialog",true);
		fmLogoin::Progress2(15,28);
		TForm::loadFromFile("{$dfm_dir}uRunDebug",true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uInspect",true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uPHPEditor", true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uSynSettings", true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uFormList");
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uImageView");
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uNewProject",true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uMenuEditor",true);
		fmLogoin::Progress2(15,28);
        
        TForm::loadFromFile("{$dfm_dir}uFormProperties");
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uPHPModules");
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uBuildProgram"); 
		fmLogoin::Progress2(15,28);
		c("fmBuildProgram->im_icon")->loadFromFile(DOC_ROOT . 'project_parts/project.ico');
        TForm::loadFromFile("{$dfm_dir}uBuildCompleted",true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uProjectOptions",true);
		fmLogoin::Progress2(15,28);
         
        TForm::loadFromFile("{$dfm_dir}uOptions", true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uSizesPosition");
		fmLogoin::Progress2(15,28);
        
        TForm::loadFromFile("{$dfm_dir}uEasySelectDialog", true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uFindError", true);
		fmLogoin::Progress2(15,28);
        TForm::loadFromFile("{$dfm_dir}uAbout",true);
		fmLogoin::Progress2(15,28);
		
		global $fmObjInspect;
		$fmObjInspect = TForm::loadFromFile("{$dfm_dir}uObjectInspector", true);
		fmLogoin::Progress2(15,28,"Forms Loaded");
		unset($dfm_dir);
    }
    
    if (!EMULATE_DVS_EXE){
    
	
        $GLOBALS['APPLICATION']->processMessages();
    

        include 'scripts/consts.php';
        include 'scripts/images.php';
    
        include 'scripts/actPanel.php';
        include 'scripts/modules.php';
        include 'scripts/debug.php';

        $GLOBALS['APPLICATION']->processMessages();
    }
    
    require 'design/init.php';
    
    if (!EMULATE_DVS_EXE){  
        
        global $myProperties;
        $myProperties->generateAllClasses();
		
        include 'scripts/hotkeys.php';
		include 'scripts/treebrowser.php';
		include 'scripts/eventTabs.php';
		fmLogoin::Progress(2,"Hotkeys Loaded");
        $GLOBALS['APPLICATION']->processMessages();
        
        loader::model('actions');
        Localization::localApplication();
		
		if( DS_DEBUG_MODE )
		{
			gui_message('Loading time: '.(microtime(1)-$tt));
			unset($tt);
		}
		$fmLogoin->free();
        unset($fmLogoin);
        evfmMain::loadMainConfig();
		c('fmMain->panelPropEvent')->onChange = 'myProperties::fixSplitterMoved';
		$fmMain->onResize = 'myProperties::fixSplitterMoved';
		myProperties::fixSplitterMoved(0);
    }
     
    define('IS_APPLICATION_START',true);
    
    if (!EMULATE_DVS_EXE){  
     
        global $_PARAMS, $fmMain, $_sc, $myInspect;
		
        if (myOptions::get('newProjectDialog', 'startup', true) && !file_exists(isset($_PARAMS[2])? $_PARAMS[2]: '')) {
			$GLOBALS['__newproject_close'] = true;
            myProject::newProjectDialog( true ); 
		} else {
			myProject::openLsProject( true );
			$GLOBALS['__newproject_close'] = false;
		}
		$dock = с("fmMain->pDockMain");
		$dock->drop = new TDropFilesTarget($dock);
		$dock->drop->enabled = true;
		$dock->drop->OnDropFiles =
		function($self, $files, $x, $y)
		{
			global $fmMain, $fmEdit, $myProperties, $myProject, $projectFile, $_sc, $myEvents;
			$n = 1;
			$d = 0;
			$prev = false;
			$focus = count($files)==1;
			if(!isset($exts2))
			{
				static $exts =  ['bmp', 'gif', 'jpeg', 'jpg', 'jpe', 'jif', 'jfif', 'tif', 'tiff', 'svg', 'wmf', 'emf', 'ico', 'icon', 'png'];
				static $exts2 = ['dvs', 'msppr', 'dfm', 'upr'];
			}
			$gs = $_sc->gridSize;
			$_sc->clearTargets();
			foreach($files as $file)
			{
				if( trim($file) == "" ) continue;
				$filename = replaceSl( $file );
				$ext = strtolower(fileExt($filename));
				if( in_array($ext, $exts) ){
				$img = new TMImage($fmEdit);
				$img->parent = $fmEdit;
				$img->picture->loadFromFile($filename);
				do{$name = "image".$n++;}while($fmEdit->findComponent($name));
				$img->name = $name;
				$img->x = $d;
				$img->y = $d;
				$img->autosize = true;
				$img->autosize = false;
				$img->w = round($img->w/$gs)*$gs;
				$img->h = round($img->h/$gs)*$gs;
				$_sc->registerTarget($img);
				$_sc->addTarget($img);
				if($d==0)
				{
					$myProperties->generate($img->self,c('fmPropsAndEvents->tabProps',1));
					$myEvents->generate($img);
				}
				$d += $_sc->gridSize;
				}elseif( in_array($ext, $exts2) ) {
				if (!CApi::doEvent('onOpenProject',array('filename'=>$filename,'ext'=>$ext))) return;
					switch ($ext){
						case 'dvs':
							{
								myProject::openFromDVS($filename);
								return;
							}
							break;
						case 'msppr':
							{
								myProject::open($filename);
								return;
							}break;
						case 'upr':
							{
								myProject::open($filename);
								return;
							}break;
						case 'dfm':
							{
								myUtils::addFromFile($filename, $focus);
							}break;
					}
				} else 
				{
					$fmMain->toFront();
					if($ext == 'php')
					{
						x_copy($filename, dirname($projectFile) . '/scripts/' . basename($filename));
					} else {
						if(!$prev)
							if(confirm(t("Add unsupported file(s) to the resources?")))
								$prev = true;
						if($prev)
							x_copy($filename, dirname($projectFile) . '/'. $myProject->config['data_dir'] . '/' . basename($filename));
					}						
				}
			}

		};
		$dock = c("fmMain->tabForms");
		$dock->drop = new TDropFilesTarget($dock);
		$dock->drop->parent = $dock;
		$dock->drop->enabled = true;
		$dock->drop->OnDropFiles = 
		function($self, $files, $x, $y)
		{	
			if( count($files) == 1)
			{
				myUtils::addFromFile($files[0],true);
			} else
				foreach($files as $file)
				{
					myUtils::addFromFile($file);
				}
		};
			$kx = myOptions::get('fmMain', 'x', -8);
			$ky = myOptions::get('fmMain', 'y', -8);
			if($kx > -8 or $ky > -8)
			$fmMain->position = poDesigned;
			if( $kx > -8 )
			$fmMain->left  = $kx;
			if( $ky > -8 )
			$fmMain->top	=  $ky;
		unset($dock, $kx,$ky);
	    $fmMain->show();
    }
    
    
    
    if (EMULATE_DVS_EXE){  
        
        set_include_path(DOC_ROOT);
        ini_set('include_path', DOC_ROOT);
        chdir(DOC_ROOT);
        
		
        $util = evalProject::open( str_ireplace('.dvsexe','.dvs', $_PARAMS[2]) );
		
        setMainForm(current($util->forms));
        current($util->forms)->show();
        $APPLICATION->mainFormOnTaskBar = true;        
    }
} else {
    //halt();
}
